{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, signInWithEmailAndPassword, GoogleAuthProvider, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDq6GnG8aoTJZ43KRQoC-NssviraLXknwc\",\n  authDomain: \"shopping-db-57035.firebaseapp.com\",\n  projectId: \"shopping-db-57035\",\n  storageBucket: \"shopping-db-57035.appspot.com\",\n  messagingSenderId: \"769151475543\",\n  appId: \"1:769151475543:web:dda4e95c67d012295c6812\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth); // 一直监听，一旦登入等出变化，就callback\n\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","signInWithEmailAndPassword","GoogleAuthProvider","createUserWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signInAuthWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/home/axun/React/shopping/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { \n    getAuth, \n    signInWithRedirect, \n    signInWithPopup, \n    signInWithEmailAndPassword,\n    GoogleAuthProvider,\n    createUserWithEmailAndPassword,\n    signOut,\n    onAuthStateChanged,\n} from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDq6GnG8aoTJZ43KRQoC-NssviraLXknwc\",\n    authDomain: \"shopping-db-57035.firebaseapp.com\",\n    projectId: \"shopping-db-57035\",\n    storageBucket: \"shopping-db-57035.appspot.com\",\n    messagingSenderId: \"769151475543\",\n    appId: \"1:769151475543:web:dda4e95c67d012295c6812\"\n  };\n  \n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\n\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n \nexport const createUserDocumentFromAuth = async (\n    userAuth,\n    additionalInformation = {}\n    ) => {\n    if (!userAuth) return;\n\n    const userDocRef = doc(db, 'users', userAuth.uid)\n\n    const userSnapshot = await getDoc(userDocRef);\n\n    if (!userSnapshot.exists()) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt,\n            });\n        } catch (error) {\n            console.log('error creating the user', error.message);\n        }\n    }\n\n    return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;\n\n    return await createUserWithEmailAndPassword(auth, email, password)\n}\n\nexport const signInAuthWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;\n\n    return await signInWithEmailAndPassword(auth, email, password)\n}\n\nexport const signOutUser = async () => await signOut(auth)\n\n// 一直监听，一旦登入等出变化，就callback\nexport const onAuthStateChangedListener = (callback) => \n    onAuthStateChanged(auth, callback)"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACIC,OADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,0BAJJ,EAKIC,kBALJ,EAMIC,8BANJ,EAOIC,OAPJ,EAQIC,kBARJ,QASO,eATP;AAUA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD,C,CAEA;;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCADW;EAEnBC,UAAU,EAAE,mCAFO;EAGnBC,SAAS,EAAE,mBAHQ;EAInBC,aAAa,EAAE,+BAJI;EAKnBC,iBAAiB,EAAE,cALA;EAMnBC,KAAK,EAAE;AANY,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGpB,aAAa,CAACa,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIhB,kBAAJ,EAAvB;AACAgB,cAAc,CAACC,mBAAf,CAAmC;EAC/BC,MAAM,EAAE;AADuB,CAAnC;AAIA,OAAO,MAAMC,IAAI,GAAGvB,OAAO,EAApB;AAEP,OAAO,MAAMwB,qBAAqB,GAAG,MAAMtB,eAAe,CAACqB,IAAD,EAAOH,cAAP,CAAnD;AACP,OAAO,MAAMK,wBAAwB,GAAG,MAAMxB,kBAAkB,CAACsB,IAAD,EAAOH,cAAP,CAAzD;AAEP,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEP,OAAO,MAAMmB,0BAA0B,GAAG,gBACtCC,QADsC,EAGjC;EAAA,IADLC,qBACK,uEADmB,EACnB;EACL,IAAI,CAACD,QAAL,EAAe;EAEf,MAAME,UAAU,GAAGrB,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAtB;EAEA,MAAMC,YAAY,GAAG,MAAMtB,MAAM,CAACoB,UAAD,CAAjC;;EAEA,IAAI,CAACE,YAAY,CAACC,MAAb,EAAL,EAA4B;IACxB,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBP,QAA/B;IACA,MAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACA,MAAM1B,MAAM,CAACmB,UAAD,EAAa;QACrBI,WADqB;QAErBC,KAFqB;QAGrBC;MAHqB,CAAb,CAAZ;IAKH,CAND,CAME,OAAOE,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAK,CAACG,OAA7C;IACH;EACJ;;EAED,OAAOX,UAAP;AACH,CA1BM;AA4BP,OAAO,MAAMY,kCAAkC,GAAG,OAAOP,KAAP,EAAcQ,QAAd,KAA2B;EACzE,IAAI,CAACR,KAAD,IAAU,CAACQ,QAAf,EAAyB;EAEzB,OAAO,MAAMtC,8BAA8B,CAACkB,IAAD,EAAOY,KAAP,EAAcQ,QAAd,CAA3C;AACH,CAJM;AAMP,OAAO,MAAMC,8BAA8B,GAAG,OAAOT,KAAP,EAAcQ,QAAd,KAA2B;EACrE,IAAI,CAACR,KAAD,IAAU,CAACQ,QAAf,EAAyB;EAEzB,OAAO,MAAMxC,0BAA0B,CAACoB,IAAD,EAAOY,KAAP,EAAcQ,QAAd,CAAvC;AACH,CAJM;AAMP,OAAO,MAAME,WAAW,GAAG,YAAY,MAAMvC,OAAO,CAACiB,IAAD,CAA7C,C,CAEP;;AACA,OAAO,MAAMuB,0BAA0B,GAAIC,QAAD,IACtCxC,kBAAkB,CAACgB,IAAD,EAAOwB,QAAP,CADf"},"metadata":{},"sourceType":"module"}