{"ast":null,"code":"var _jsxFileName = \"/home/axun/React/shopping/src/contexts/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState, useReducer } from \"react\";\nimport { createAction } from \"../utils/reducer/reducer.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  // 如果cartItems包含productToAdd，找到\n  const existCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); // 如果找到，增加数量\n\n  if (existCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } // return 新数组（new cartitem）\n\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst subCartItem = (cartItems, cartItemToSub) => {\n  //找到要移除的cartitem\n  const existCartItem = cartItems.find(cartItem => cartItem.id === cartItemToSub.id); // 检查数量是否为1，是就移除\n\n  if (existCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToSub.id);\n  } // 减少个数，返回数组\n\n\n  if (existCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToSub.id ? { ...cartItem,\n      quantity: cartItem.quantity - 1\n    } : cartItem);\n  }\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  subItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  total: 0\n}); // for useReducer\n\nconst CART_ACTION_TYPES = {\n  SET_IS_CART_OPEN: 'SET_IS_CART_OPEN',\n  SET_CART_ITEMS: 'SET_CART_ITEMS',\n  SET_CART_COUNT: 'SET_CART_COUNT',\n  SET_CART_TOTAL: 'SET_CART_TOTAL'\n};\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItem: [],\n  cartCount: 0,\n  cartTotal: 0\n};\n\nconst cartReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.SET_CART_ITEMS:\n      return { ...state,\n        ...payload\n      };\n\n    default:\n      throw new Error(`unhandle type of ${type} in cartReducer`);\n  }\n};\n\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [isCartOpen, setIsCartOpen] = useState(false);\n  // const [cartItems, setCartItems] = useState([]);\n  // const [cartCount, setCartCount] = useState(0);\n  // const [cartTotal, setCartTotal] = useState(0);\n  // useEffect(() => {\n  //     const newCartCount = cartItems.reduce(\n  //         (total, cartItem) => total + cartItem.quantity, 0)\n  //     setCartCount(newCartCount);\n  // }, [cartItems])\n  // useEffect(() => {\n  //     const newCartTotal = cartItems.reduce(\n  //         (total, cartItem) => total + cartItem.quantity * cartItem.price, 0)\n  //     setCartTotal(newCartTotal);\n  // }, [cartItems])\n  // 第一个arg：state = {xxx}\n  const [{\n    cartItems,\n    isCartOpen,\n    cartCount,\n    cartTotal\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n\n  const updateCartItemsReducer = newCartItems => {\n    // generate newCartTotal\n    const newCartCount = newCartItems.reduce((total, cartItem) => total + cartItem.quantity, 0); // generate newCartCount\n\n    const newCartTotal = newCartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0); // dispatch new action with payload\n\n    dispatch(createAction(CART_ACTION_TYPES.SET_CART_COUNT, {\n      cartItems: newCartItems,\n      cartTotal: newCartTotal,\n      cartCount: newCartCount\n    }));\n  };\n\n  const addItemToCart = productToAdd => {\n    const newCartItems = setCartItems(addCartItem(cartItems, productToAdd));\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const subItemToCart = cartItemToSub => {\n    const newCartItems = setCartItems(subCartItem(cartItems, cartItemToSub));\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const clearItemFromCart = cartItemToClear => {\n    const newCartItems = setCartItems(clearCartItem(cartItems, cartItemToClear));\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const setIsCarOpen = bool => {\n    dispatch(createAction(CART_ACTION_TYPES.SET_IS_CART_OPEN, bool));\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    subItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"bR7gJFr7P06GYTM9wLGjkLltnDI=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useReducer","createAction","addCartItem","cartItems","productToAdd","existCartItem","find","cartItem","id","map","quantity","subCartItem","cartItemToSub","filter","clearCartItem","cartItemToClear","CartContext","isCartOpen","setIsOpen","addItemToCart","subItemFromCart","clearItemFromCart","cartCount","total","CART_ACTION_TYPES","SET_IS_CART_OPEN","SET_CART_ITEMS","SET_CART_COUNT","SET_CART_TOTAL","INITIAL_STATE","cartTotal","cartReducer","state","action","type","payload","Error","CartProvider","children","dispatch","updateCartItemsReducer","newCartItems","newCartCount","reduce","newCartTotal","price","setCartItems","subItemToCart","setIsCarOpen","bool","value","setIsCartOpen"],"sources":["/home/axun/React/shopping/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState, useReducer } from \"react\";\nimport {createAction} from \"../utils/reducer/reducer.utils\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n    // 如果cartItems包含productToAdd，找到\n    const existCartItem = cartItems.find((cartItem) => cartItem.id === productToAdd.id)\n\n    // 如果找到，增加数量\n    if (existCartItem) {\n        return cartItems.map((cartItem) => cartItem.id === productToAdd.id \n            ? {...cartItem, quantity: cartItem.quantity + 1}\n            : cartItem\n        )\n    }\n\n    // return 新数组（new cartitem）\n    return [...cartItems, { ...productToAdd, quantity:1 }]\n}\n\nconst subCartItem = (cartItems, cartItemToSub) => {\n    //找到要移除的cartitem\n    const existCartItem = cartItems.find((cartItem) => cartItem.id === cartItemToSub.id)\n\n    // 检查数量是否为1，是就移除\n    if (existCartItem.quantity === 1) {\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToSub.id)\n    } \n\n    // 减少个数，返回数组\n    if (existCartItem) {\n        return cartItems.map((cartItem) => cartItem.id === cartItemToSub.id \n            ? {...cartItem, quantity: cartItem.quantity - 1}\n            : cartItem\n        )\n    }\n}\n\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id)\n\nexport const CartContext = createContext({\n    isCartOpen: false,\n    setIsOpen: () => {},\n    cartItems: [],\n    addItemToCart: () => {},\n    subItemFromCart: () => {},\n    clearItemFromCart: () => {},\n    cartCount: 0,\n    total: 0,\n})\n\n// for useReducer\nconst CART_ACTION_TYPES = {\n    SET_IS_CART_OPEN: 'SET_IS_CART_OPEN',\n    SET_CART_ITEMS: 'SET_CART_ITEMS',\n    SET_CART_COUNT: 'SET_CART_COUNT',\n    SET_CART_TOTAL: 'SET_CART_TOTAL',\n  };\n\nconst INITIAL_STATE = {\n    isCartOpen: false,\n    cartItem: [],\n    cartCount: 0,\n    cartTotal: 0,\n}\n\n \nconst cartReducer = (state, action) => {\n    const { type, payload } = action;\n\n    switch(type) {\n        case CART_ACTION_TYPES.SET_CART_ITEMS:\n            return {\n                ...state,\n                ...payload\n            }\n        default:\n            throw new Error(`unhandle type of ${type} in cartReducer`)\n    }\n}\n\nexport const CartProvider = ({ children }) => {\n    // const [isCartOpen, setIsCartOpen] = useState(false);\n    // const [cartItems, setCartItems] = useState([]);\n    // const [cartCount, setCartCount] = useState(0);\n    // const [cartTotal, setCartTotal] = useState(0);\n\n    // useEffect(() => {\n    //     const newCartCount = cartItems.reduce(\n    //         (total, cartItem) => total + cartItem.quantity, 0)\n    //     setCartCount(newCartCount);\n    // }, [cartItems])\n\n    // useEffect(() => {\n    //     const newCartTotal = cartItems.reduce(\n    //         (total, cartItem) => total + cartItem.quantity * cartItem.price, 0)\n    //     setCartTotal(newCartTotal);\n    // }, [cartItems])\n\n    // 第一个arg：state = {xxx}\n    const [{cartItems, isCartOpen, cartCount, cartTotal }, dispatch] = useReducer(cartReducer, INITIAL_STATE);\n\n    const updateCartItemsReducer = (newCartItems) => {\n        // generate newCartTotal\n        const newCartCount = newCartItems.reduce(\n            (total, cartItem) => total + cartItem.quantity, 0)\n\n        // generate newCartCount\n        const newCartTotal = newCartItems.reduce(\n            (total, cartItem) => total + cartItem.quantity * cartItem.price, 0)\n\n        // dispatch new action with payload\n        dispatch(\n            createAction(CART_ACTION_TYPES.SET_CART_COUNT, { \n                cartItems: newCartItems,\n                cartTotal: newCartTotal,\n                cartCount: newCartCount\n            })\n        )\n    }\n\n    const addItemToCart = (productToAdd) => {\n        const newCartItems = setCartItems(addCartItem(cartItems, productToAdd))\n        updateCartItemsReducer(newCartItems)\n    }\n\n    const subItemToCart = (cartItemToSub) => {\n        const newCartItems = setCartItems(subCartItem(cartItems, cartItemToSub))\n        updateCartItemsReducer(newCartItems)\n    }\n\n\n    const clearItemFromCart = (cartItemToClear) => {\n        const newCartItems = setCartItems(clearCartItem(cartItems, cartItemToClear))\n        updateCartItemsReducer(newCartItems)\n    }\n\n    const setIsCarOpen = (bool) => {\n        dispatch(createAction(CART_ACTION_TYPES.SET_IS_CART_OPEN, bool))\n    }\n\n    const value = {\n        isCartOpen, \n        setIsCartOpen, \n        addItemToCart, \n        subItemToCart, \n        clearItemFromCart, \n        cartItems, \n        cartCount,\n        cartTotal,\n    }\n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}