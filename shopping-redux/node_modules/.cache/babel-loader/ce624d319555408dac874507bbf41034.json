{"ast":null,"code":"var _jsxFileName = \"/home/axun/React/shopping/src/contexts/user.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState, useReducer } from \"react\";\nimport { onAuthStateChangedListener, createUserDocumentFromAuth } from \"../utils/firebase/firebase.utils\";\nimport { createAction } from \"../utils/reducer/reducer.utils\"; // as the actual value you want to access\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n});\nexport const USER_ACTION_TYPES = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER'\n};\nconst INITIAL_STATE = {\n  currentUser: null\n};\n\nconst userReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USER_ACTION_TYPES.SET_CURRENT_USER:\n      return { ...state,\n        currentUser: payload\n      };\n\n    default:\n      throw new Error(`Unhandled type ${type} in userReducer`);\n  }\n};\n\nexport const UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //const [currentUser, setCurrentUser] = useState(null);\n  // 用userReducer代替useState\n  const [{\n    currentUser\n  }, dispatch] = useReducer(userReducer, INITIAL_STATE);\n\n  const setCurrentUser = user => {\n    dispatch(createAction(USER_ACTION_TYPES.SET_CURRENT_USER, user));\n  };\n\n  const value = {\n    currentUser,\n    setCurrentUser\n  }; // 退订\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      if (user) {\n        createUserDocumentFromAuth(user);\n      }\n\n      setCurrentUser(user); //如果登录了就存当前用户对象 如果登出了就存null\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UserProvider, \"Ly2T5gvIYH0kWgGwsoCmu+18UUU=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useReducer","onAuthStateChangedListener","createUserDocumentFromAuth","createAction","UserContext","currentUser","setCurrentUser","USER_ACTION_TYPES","SET_CURRENT_USER","INITIAL_STATE","userReducer","state","action","type","payload","Error","UserProvider","children","dispatch","user","value","unsubscribe"],"sources":["/home/axun/React/shopping/src/contexts/user.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState, useReducer } from \"react\";\nimport { onAuthStateChangedListener, createUserDocumentFromAuth } from \"../utils/firebase/firebase.utils\";\nimport {createAction} from \"../utils/reducer/reducer.utils\";\n\n// as the actual value you want to access\nexport const UserContext = createContext({\n    currentUser: null,\n    setCurrentUser: () => null,\n})\n\nexport const USER_ACTION_TYPES = {\n    SET_CURRENT_USER: 'SET_CURRENT_USER'\n}\n\nconst INITIAL_STATE = {\n    currentUser: null,\n}\n\nconst userReducer = (state, action) => {\n    const {type, payload} = action\n\n    switch(type) {\n        case USER_ACTION_TYPES.SET_CURRENT_USER:\n            return {\n                ...state,\n                currentUser: payload\n            }\n        default: \n            throw new Error(`Unhandled type ${type} in userReducer`)\n    }\n} \n\nexport const UserProvider = ({ children }) => {\n\n    //const [currentUser, setCurrentUser] = useState(null);\n    // 用userReducer代替useState\n    const [{ currentUser}, dispatch] = useReducer(userReducer, INITIAL_STATE);\n\n    const setCurrentUser = (user) => {\n        dispatch(createAction( USER_ACTION_TYPES.SET_CURRENT_USER, user) )\n    }\n    const value = { currentUser, setCurrentUser };\n\n\n    // 退订\n    useEffect(() => {\n        const unsubscribe = onAuthStateChangedListener((user) => {\n            if(user) {\n                createUserDocumentFromAuth(user);\n            }\n            setCurrentUser(user) //如果登录了就存当前用户对象 如果登出了就存null\n        })\n\n        return unsubscribe\n    }, [])\n    return <UserContext.Provider value={value}>{children}</UserContext.Provider>\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,0BAAT,EAAqCC,0BAArC,QAAuE,kCAAvE;AACA,SAAQC,YAAR,QAA2B,gCAA3B,C,CAEA;;;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC;EACrCQ,WAAW,EAAE,IADwB;EAErCC,cAAc,EAAE,MAAM;AAFe,CAAD,CAAjC;AAKP,OAAO,MAAMC,iBAAiB,GAAG;EAC7BC,gBAAgB,EAAE;AADW,CAA1B;AAIP,MAAMC,aAAa,GAAG;EAClBJ,WAAW,EAAE;AADK,CAAtB;;AAIA,MAAMK,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACnC,MAAM;IAACC,IAAD;IAAOC;EAAP,IAAkBF,MAAxB;;EAEA,QAAOC,IAAP;IACI,KAAKN,iBAAiB,CAACC,gBAAvB;MACI,OAAO,EACH,GAAGG,KADA;QAEHN,WAAW,EAAES;MAFV,CAAP;;IAIJ;MACI,MAAM,IAAIC,KAAJ,CAAW,kBAAiBF,IAAK,iBAAjC,CAAN;EAPR;AASH,CAZD;;AAcA,OAAO,MAAMG,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAE1C;EACA;EACA,MAAM,CAAC;IAAEZ;EAAF,CAAD,EAAiBa,QAAjB,IAA6BlB,UAAU,CAACU,WAAD,EAAcD,aAAd,CAA7C;;EAEA,MAAMH,cAAc,GAAIa,IAAD,IAAU;IAC7BD,QAAQ,CAACf,YAAY,CAAEI,iBAAiB,CAACC,gBAApB,EAAsCW,IAAtC,CAAb,CAAR;EACH,CAFD;;EAGA,MAAMC,KAAK,GAAG;IAAEf,WAAF;IAAeC;EAAf,CAAd,CAT0C,CAY1C;;EACAR,SAAS,CAAC,MAAM;IACZ,MAAMuB,WAAW,GAAGpB,0BAA0B,CAAEkB,IAAD,IAAU;MACrD,IAAGA,IAAH,EAAS;QACLjB,0BAA0B,CAACiB,IAAD,CAA1B;MACH;;MACDb,cAAc,CAACa,IAAD,CAAd,CAJqD,CAIhC;IACxB,CAL6C,CAA9C;IAOA,OAAOE,WAAP;EACH,CATQ,EASN,EATM,CAAT;EAUA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAED,KAA7B;IAAA,UAAqCH;EAArC;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAxBM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}