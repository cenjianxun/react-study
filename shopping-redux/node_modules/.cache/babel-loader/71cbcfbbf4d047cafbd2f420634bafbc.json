{"ast":null,"code":"var _jsxFileName = \"/home/axun/React/shopping/src/components/button/button.component.jsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton, ButtonSpinner } from './button.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n};\n\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\n\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    isLoading,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, {\n    disabled: isLoading,\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","ButtonSpinner","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","Button","children","isLoading","otherProps","CustomButton"],"sources":["/home/axun/React/shopping/src/components/button/button.component.jsx"],"sourcesContent":["import {\n    BaseButton,\n    GoogleSignInButton,\n    InvertedButton,\n    ButtonSpinner,\n} from './button.styles'\n\nexport const BUTTON_TYPE_CLASSES = {\n    base: 'base',\n    google: 'google-sign-in',\n    inverted: 'inverted',\n}\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) => (\n    {\n        [BUTTON_TYPE_CLASSES.base]: BaseButton,\n        [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n        [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n    }[buttonType]\n)\nconst Button = ({children, buttonType, isLoading, ...otherProps}) => {\n    const CustomButton = getButton(buttonType)\n    return (\n        <CustomButton disabled={isLoading} {...otherProps}>\n            {children}\n        </CustomButton>\n    )\n}\n\nexport default Button"],"mappings":";AAAA,SACIA,UADJ,EAEIC,kBAFJ,EAGIC,cAHJ,EAIIC,aAJJ,QAKO,iBALP;;AAOA,OAAO,MAAMC,mBAAmB,GAAG;EAC/BC,IAAI,EAAE,MADyB;EAE/BC,MAAM,EAAE,gBAFuB;EAG/BC,QAAQ,EAAE;AAHqB,CAA5B;;AAMP,MAAMC,SAAS,GAAG;EAAA,IAACC,UAAD,uEAAcL,mBAAmB,CAACC,IAAlC;EAAA,OACd;IACI,CAACD,mBAAmB,CAACC,IAArB,GAA4BL,UADhC;IAEI,CAACI,mBAAmB,CAACE,MAArB,GAA8BL,kBAFlC;IAGI,CAACG,mBAAmB,CAACG,QAArB,GAAgCL;EAHpC,EAIEO,UAJF,CADc;AAAA,CAAlB;;AAOA,MAAMC,MAAM,GAAG,QAAsD;EAAA,IAArD;IAACC,QAAD;IAAWF,UAAX;IAAuBG,SAAvB;IAAkC,GAAGC;EAArC,CAAqD;EACjE,MAAMC,YAAY,GAAGN,SAAS,CAACC,UAAD,CAA9B;EACA,oBACI,QAAC,YAAD;IAAc,QAAQ,EAAEG,SAAxB;IAAA,GAAuCC,UAAvC;IAAA,UACKF;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAPD;;KAAMD,M;AASN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}